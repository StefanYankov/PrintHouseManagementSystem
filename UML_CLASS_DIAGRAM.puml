@startuml
' Entities with Fields, Getters, and Setters
entity "PrintHouse" {
  -baseSalary : Real
  -employeeSalaryIncrementPercentage : Real
  -paperIncrementPercentage : Real
  -revenueTarget : Real
  -salesDiscountCount : Integer
  -salesDiscountPercentage : Real
  -incrementEligibleRoles : EmployeeType[*]
  -employees : Employee[*]
  -printingPresses : PrintingPress[*]
  -editions : Edition[*]
  --
  +getBaseSalary() : Real
  +setBaseSalary(baseSalary : Real)
  +getEmployeeSalaryIncrementPercentage() : Real
  +setEmployeeSalaryIncrementPercentage(percentage : Real)
  +getPaperIncrementPercentage() : Real
  +setPaperIncrementPercentage(percentage : Real)
  +getRevenueTarget() : Real
  +setRevenueTarget(target : Real)
  +getSalesDiscountCount() : Integer
  +setSalesDiscountCount(count : Integer)
  +getSalesDiscountPercentage() : Real
  +setSalesDiscountPercentage(percentage : Real)
  +getIncrementEligibleRoles() : EmployeeType[*]
  +setIncrementEligibleRoles(roles : EmployeeType[*])
  +getEmployees() : Employee[*]
  +getPrintingPresses() : PrintingPress[*]
  +getEditions() : Edition[*]
}

entity "Employee" {
  -egn : String
  -employeeType : EmployeeType
  --
  +getEgn() : String
  +setEgn(egn : String)
  +getEmployeeType() : EmployeeType
  +setEmployeeType(type : EmployeeType)
}

entity "PrintingPress" {
  -maxPaperLoad : Integer
  -currentPaperLoad : Integer
  -isColourCapable : Boolean
  -maximumPagesPerMinute : Integer
  -printedItems : PrintedItem[*]
  --
  +getMaxPaperLoad() : Integer
  +setMaxPaperLoad(load : Integer)
  +getCurrentPaperLoad() : Integer
  +setCurrentPaperLoad(load : Integer)
  +getIsColourCapable() : Boolean
  +setIsColourCapable(capable : Boolean)
  +getMaximumPagesPerMinute() : Integer
  +setMaximumPagesPerMinute(rate : Integer)
  +getPrintedItems() : PrintedItem[*]
}

entity "Edition" {
  -title : String
  -numberOfPages : Integer
  -size : Size
  --
  +getTitle() : String
  +setTitle(title : String)
  +getNumberOfPages() : Integer
  +setNumberOfPages(pages : Integer)
  +getSize() : Size
  +setSize(size : Size)
}

entity "PrintedItem" {
  -paperType : PaperType
  -pricePerCopy : Real
  -numberOfCopies : Integer
  -isColourPrint : Boolean
  -edition : Edition
  --
  +getPaperType() : PaperType
  +setPaperType(type : PaperType)
  +getPricePerCopy() : Real
  +setPricePerCopy(price : Real)
  +getNumberOfCopies() : Integer
  +setNumberOfCopies(copies : Integer)
  +getIsColourPrint() : Boolean
  +setIsColourPrint(isColour : Boolean)
  +getEdition() : Edition
  +setEdition(edition : Edition)
}

' Enums
enum "EmployeeType" {
  OPERATOR
  MANAGER
}

enum "PaperType" {
  STANDARD
  GLOSSY
  NEWSPAPER
}

enum "Size" {
  A1
  A2
  A3
  A4
  A5
}

' Interfaces
interface "IPrintHouseService" {
  createPrintHouse()
  updatePrintHouse()
  removePrintHouse()
  getAllPrintHouses()
  saveAllPrintHouses()
  loadAllPrintHouses()
}

interface "IEmployeeService" {
  addEmployee()
  updateEmployee()
  removeEmployee()
  getEmployees()
  getTotalCostForEmployees()
}

interface "IPrintingPressService" {
  addPrintingPress()
  updatePrintingPress()
  removePrintingPress()
  printItem()
  getTotalRevenue()
}

interface "IEditionService" {
  addEdition()
  updateEdition()
  removeEdition()
}

interface "ISerializationService" {
  serialize()
  deserialize()
}

' Service Classes
class "PrintHouseService" {
}

class "EmployeeService" {
}

class "PrintingPressService" {
}

class "EditionService" {
}

class "SerializationService" {
}

' Controllers
class "PrintHouseController" {
  +handleMenu()
  -addPrintHouse()
  -updatePrintHouse()
  -removePrintHouse()
  -saveAllPrintHouses()
  -loadAllPrintHouses()
}

class "EmployeeController" {
  +handleMenu()
  -addEmployee()
  -removeEmployee()
  -updateEmployee()
  -calculateTotalEmployeeCost()
  -listAllEmployees()
}

class "PrintingPressController" {
  +handleMenu()
  -addPrintingPress()
  -updatePrintingPress()
  -removePrintingPress()
  -printItem()
  -loadPaper()
}

class "EditionController" {
  +handleMenu()
  -addEdition()
  -updateEdition()
  -removeEdition()
}

' Relationships
' Composition
PrintHouse o--> "0..*" Employee
PrintHouse o--> "0..*" PrintingPress
PrintHouse o--> "0..*" Edition
PrintingPress o--> "0..*" PrintedItem

' Associations
Employee --> "1" EmployeeType
PrintedItem --> "1" Edition
PrintedItem --> "1" PaperType
Edition --> "1" Size

' Realization
PrintHouseService <|.. IPrintHouseService
EmployeeService <|.. IEmployeeService
PrintingPressService <|.. IPrintingPressService
EditionService <|.. IEditionService
SerializationService <|.. ISerializationService

' Dependency
PrintHouseController ..> IPrintHouseService : <<uses>>
EmployeeController ..> IEmployeeService : <<uses>>
PrintingPressController ..> IPrintingPressService : <<uses>>
EditionController ..> IEditionService : <<uses>>

PrintHouseService ..> ISerializationService : <<uses>>
EmployeeService ..> IPrintingPressService : <<uses>>

' Associations (services to entities)
PrintHouseService --> PrintHouse
EmployeeService --> PrintHouse
EmployeeService --> Employee
PrintingPressService --> PrintingPress
PrintingPressService --> PrintedItem
EditionService --> Edition
@enduml